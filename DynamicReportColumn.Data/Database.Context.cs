//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynamicReportColumn.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Database_Entities : DbContext
    {
        public Database_Entities()
            : base("name=Database_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<lnkAccessUserGroup> lnkAccessUserGroups { get; set; }
        public virtual DbSet<lnkAllocation> lnkAllocations { get; set; }
        public virtual DbSet<lnkAllocationBal> lnkAllocationBals { get; set; }
        public virtual DbSet<lnkCatalogGrpModel> lnkCatalogGrpModels { get; set; }
        public virtual DbSet<lnkCatalogGrpUser> lnkCatalogGrpUsers { get; set; }
        public virtual DbSet<lnkCatalogGrpUserNew> lnkCatalogGrpUserNews { get; set; }
        public virtual DbSet<lnkCollectionDO> lnkCollectionDOes { get; set; }
        public virtual DbSet<lnkCollectionDOStatu> lnkCollectionDOStatus { get; set; }
        public virtual DbSet<lnkDefaultBin> lnkDefaultBins { get; set; }
        public virtual DbSet<lnkDelivery> lnkDeliveries { get; set; }
        public virtual DbSet<lnkDeliveryBal> lnkDeliveryBals { get; set; }
        public virtual DbSet<lnkItemStatusConversion> lnkItemStatusConversions { get; set; }
        public virtual DbSet<lnkModel> lnkModels { get; set; }
        public virtual DbSet<lnkModelUOM> lnkModelUOMs { get; set; }
        public virtual DbSet<lnkModuleActionRole> lnkModuleActionRoles { get; set; }
        public virtual DbSet<lnkOrder> lnkOrders { get; set; }
        public virtual DbSet<lnkOrderUpload> lnkOrderUploads { get; set; }
        public virtual DbSet<lnkPurchase> lnkPurchases { get; set; }
        public virtual DbSet<lnkRepair> lnkRepairs { get; set; }
        public virtual DbSet<lnkReplaceEB> lnkReplaceEBs { get; set; }
        public virtual DbSet<lnkSale> lnkSales { get; set; }
        public virtual DbSet<lnkSalesBal> lnkSalesBals { get; set; }
        public virtual DbSet<lnkSalesDelivery> lnkSalesDeliveries { get; set; }
        public virtual DbSet<lnkSalesOrder> lnkSalesOrders { get; set; }
        public virtual DbSet<lnkSalesOrderHistory> lnkSalesOrderHistories { get; set; }
        public virtual DbSet<lnkSOContactCustomer> lnkSOContactCustomers { get; set; }
        public virtual DbSet<lnkTransfer> lnkTransfers { get; set; }
        public virtual DbSet<lnkTransferBal> lnkTransferBals { get; set; }
        public virtual DbSet<lnkTransferDiagnosi> lnkTransferDiagnosis { get; set; }
        public virtual DbSet<lnkTransferRequest> lnkTransferRequests { get; set; }
        public virtual DbSet<lnkTransferUpload> lnkTransferUploads { get; set; }
        public virtual DbSet<lnkUserGroupRole> lnkUserGroupRoles { get; set; }
        public virtual DbSet<Log4NetLnF> Log4NetLnF { get; set; }
        public virtual DbSet<logTransferItem> logTransferItems { get; set; }
        public virtual DbSet<refAction> refActions { get; set; }
        public virtual DbSet<refBizUnit> refBizUnits { get; set; }
        public virtual DbSet<refBrand> refBrands { get; set; }
        public virtual DbSet<refCatalogGroup> refCatalogGroups { get; set; }
        public virtual DbSet<refCategory> refCategories { get; set; }
        public virtual DbSet<refCenter> refCenters { get; set; }
        public virtual DbSet<refCenterType> refCenterTypes { get; set; }
        public virtual DbSet<refCity> refCities { get; set; }
        public virtual DbSet<refColour> refColours { get; set; }
        public virtual DbSet<refCountry> refCountries { get; set; }
        public virtual DbSet<refDeliveryType> refDeliveryTypes { get; set; }
        public virtual DbSet<refEmail> refEmails { get; set; }
        public virtual DbSet<refItemCode> refItemCodes { get; set; }
        public virtual DbSet<refModel> refModels { get; set; }
        public virtual DbSet<refModule> refModules { get; set; }
        public virtual DbSet<refPrice> refPrices { get; set; }
        public virtual DbSet<refRegion> refRegions { get; set; }
        public virtual DbSet<refResource> refResources { get; set; }
        public virtual DbSet<refState> refStates { get; set; }
        public virtual DbSet<refStatu> refStatus { get; set; }
        public virtual DbSet<refStatusConversionReason> refStatusConversionReasons { get; set; }
        public virtual DbSet<refStatusSOContactCustomer> refStatusSOContactCustomers { get; set; }
        public virtual DbSet<refTax> refTaxes { get; set; }
        public virtual DbSet<refTransferType> refTransferTypes { get; set; }
        public virtual DbSet<refType> refTypes { get; set; }
        public virtual DbSet<refUOM> refUOMs { get; set; }
        public virtual DbSet<refUserGroup> refUserGroups { get; set; }
        public virtual DbSet<tblAccess> tblAccesses { get; set; }
        public virtual DbSet<tblCompanySetting> tblCompanySettings { get; set; }
        public virtual DbSet<tblCoverageFilter> tblCoverageFilters { get; set; }
        public virtual DbSet<tblDiagnosisItem> tblDiagnosisItems { get; set; }
        public virtual DbSet<tblExtApp> tblExtApps { get; set; }
        public virtual DbSet<tblFile> tblFiles { get; set; }
        public virtual DbSet<tblItem> tblItems { get; set; }
        public virtual DbSet<tblNew> tblNews { get; set; }
        public virtual DbSet<tblOtherConsignmentModel> tblOtherConsignmentModels { get; set; }
        public virtual DbSet<tblStkBalance> tblStkBalances { get; set; }
        public virtual DbSet<tblStkJournal> tblStkJournals { get; set; }
        public virtual DbSet<tblStkMovement> tblStkMovements { get; set; }
        public virtual DbSet<tblTenant> tblTenants { get; set; }
        public virtual DbSet<tmpItemCodeModel> tmpItemCodeModels { get; set; }
        public virtual DbSet<tmpItemStatusConversion> tmpItemStatusConversions { get; set; }
        public virtual DbSet<tmpItemUpload> tmpItemUploads { get; set; }
        public virtual DbSet<tmpPostcode> tmpPostcodes { get; set; }
        public virtual DbSet<tmpRunningNumber> tmpRunningNumbers { get; set; }
        public virtual DbSet<trnAllocation> trnAllocations { get; set; }
        public virtual DbSet<trnCollectionDO> trnCollectionDOes { get; set; }
        public virtual DbSet<trnDelivery> trnDeliveries { get; set; }
        public virtual DbSet<trnItemStatusConversion> trnItemStatusConversions { get; set; }
        public virtual DbSet<trnMobileSession> trnMobileSessions { get; set; }
        public virtual DbSet<trnOrder> trnOrders { get; set; }
        public virtual DbSet<trnOrderUpload> trnOrderUploads { get; set; }
        public virtual DbSet<trnPurchase> trnPurchases { get; set; }
        public virtual DbSet<trnRepair> trnRepairs { get; set; }
        public virtual DbSet<trnReplaceEB> trnReplaceEBs { get; set; }
        public virtual DbSet<trnSale> trnSales { get; set; }
        public virtual DbSet<trnSalesDelivery> trnSalesDeliveries { get; set; }
        public virtual DbSet<trnSalesOrder> trnSalesOrders { get; set; }
        public virtual DbSet<trnSession> trnSessions { get; set; }
        public virtual DbSet<trnTransfer> trnTransfers { get; set; }
        public virtual DbSet<trnTransferDiagnosi> trnTransferDiagnosis { get; set; }
        public virtual DbSet<trnTransferRequest> trnTransferRequests { get; set; }
        public virtual DbSet<trnTransferUpload> trnTransferUploads { get; set; }
    
        public virtual ObjectResult<usp_rpt_OrderReport_Result> usp_rpt_OrderReport(string dateType, Nullable<System.DateTime> receivedDateFrom, Nullable<System.DateTime> receivedDateTo, Nullable<System.DateTime> orderDateFrom, Nullable<System.DateTime> orderDateTo, Nullable<int> centerTypeID, Nullable<int> statusID, Nullable<int> centerID)
        {
            var dateTypeParameter = dateType != null ?
                new ObjectParameter("DateType", dateType) :
                new ObjectParameter("DateType", typeof(string));
    
            var receivedDateFromParameter = receivedDateFrom.HasValue ?
                new ObjectParameter("ReceivedDateFrom", receivedDateFrom) :
                new ObjectParameter("ReceivedDateFrom", typeof(System.DateTime));
    
            var receivedDateToParameter = receivedDateTo.HasValue ?
                new ObjectParameter("ReceivedDateTo", receivedDateTo) :
                new ObjectParameter("ReceivedDateTo", typeof(System.DateTime));
    
            var orderDateFromParameter = orderDateFrom.HasValue ?
                new ObjectParameter("OrderDateFrom", orderDateFrom) :
                new ObjectParameter("OrderDateFrom", typeof(System.DateTime));
    
            var orderDateToParameter = orderDateTo.HasValue ?
                new ObjectParameter("OrderDateTo", orderDateTo) :
                new ObjectParameter("OrderDateTo", typeof(System.DateTime));
    
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_rpt_OrderReport_Result>("usp_rpt_OrderReport", dateTypeParameter, receivedDateFromParameter, receivedDateToParameter, orderDateFromParameter, orderDateToParameter, centerTypeIDParameter, statusIDParameter, centerIDParameter);
        }
    
        public virtual ObjectResult<usp_rpt_AccumulatedStockReport_Result> usp_rpt_AccumulatedStockReport(Nullable<int> centerTypeID, Nullable<int> centerID, Nullable<int> regionID, Nullable<int> bUID, Nullable<int> categoryID, Nullable<int> brandID, Nullable<int> modelID, Nullable<int> statusID, Nullable<int> typeID, Nullable<int> isSerialized)
        {
            var centerTypeIDParameter = centerTypeID.HasValue ?
                new ObjectParameter("CenterTypeID", centerTypeID) :
                new ObjectParameter("CenterTypeID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var bUIDParameter = bUID.HasValue ?
                new ObjectParameter("BUID", bUID) :
                new ObjectParameter("BUID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var isSerializedParameter = isSerialized.HasValue ?
                new ObjectParameter("IsSerialized", isSerialized) :
                new ObjectParameter("IsSerialized", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_rpt_AccumulatedStockReport_Result>("usp_rpt_AccumulatedStockReport", centerTypeIDParameter, centerIDParameter, regionIDParameter, bUIDParameter, categoryIDParameter, brandIDParameter, modelIDParameter, statusIDParameter, typeIDParameter, isSerializedParameter);
        }
    }
}
